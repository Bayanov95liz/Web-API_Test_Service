{
  "openapi": "3.0.1",
  "info": {
    "title": "Web-API_Test_Service",
    "version": "v1"
  },
  "paths": {
    "/api/Parcel": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Возвращает информацию обо всех поссылках.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Parcel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Parcel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Parcel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Создает новую посылку",
        "requestBody": {
          "description": "Модель посылки",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Parcel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Возвращает вновь созданную модель посылки",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Если элемент null",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Parcel"
        ],
        "summary": "Обновляет информацию существующей посылки",
        "requestBody": {
          "description": "Модель посылки",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Parcel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Возвращает вновь обновленую модель посылки",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Если элемент null",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Parcel/{id}": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Возвращает определенную посылку по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Уникальный идентификатор посылки",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Возвращает найденную посылку",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Если посылка не найдена возвращает null",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "required": [
          "city",
          "house",
          "street"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентфикатор",
            "format": "int32"
          },
          "city": {
            "type": "string",
            "description": "Город"
          },
          "street": {
            "type": "string",
            "description": "Улица"
          },
          "house": {
            "type": "integer",
            "description": "Номер дома",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Почтовый адрес"
      },
      "Parcel": {
        "required": [
          "address",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентфикатор",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Информация о посылке"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "additionalProperties": false,
        "description": "Посылка"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}